name: build

on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:

env:
  version: "2.0.2.${{ github.run_number }}${{ github.run_attempt }}"
  build_configuration: "Release"
  build_platform: "x64"

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 10
    outputs:
      version: ${{ steps.set-version.outputs.VERSION }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Update Assembly Version
      shell: pwsh
      run: |
        $NewVersion = 'AssemblyVersion("${{ env.version }}")'
        $tmpFile = New-TemporaryFile
        $assemblyInfoPath = "${{ github.workspace }}/PluginMediaMonkey/AssemblyInfo.cs"
        (Get-Content -Path $assemblyInfoPath -Encoding utf8) -replace 'AssemblyVersion\(".*"\)', $NewVersion | Set-Content -Path $tmpFile -Encoding utf8
        Move-Item -Path $tmpFile -Destination $assemblyInfoPath -Force

    - name: Restore Packages
      shell: pwsh
      run: nuget restore MediaMonkey-Rainmeter.sln

    - name: Build x64
      shell: pwsh
      run: |
        msbuild.exe MediaMonkey-Rainmeter.sln /t:Build /nologo /nr:false /p:Version=${{ env.version }} /p:platform="x64" /p:configuration="${{ env.build_configuration }}"
    
    - name: Build x86
      shell: pwsh
      run: |
        msbuild.exe MediaMonkey-Rainmeter.sln /t:Build /nologo /nr:false /p:Version=${{ env.version }} /p:platform="x86" /p:configuration="${{ env.build_configuration }}"

    - name: Move Artifacts
      shell: pwsh
      run: |
        Write-Host "a"
        # New-Item -Path "${{ github.workspace }}/deploy/x64" -Type Directory
        # Move-Item -Path "${{ github.workspace }}/PluginMediaMonkey/x64/${{ env.build_configuration }}/*" -Destination "${{ github.workspace }}/deploy/x64" -Force
        
        # New-Item -Path "${{ github.workspace }}/deploy/x32" -Type Directory
        # Move-Item -Path "${{ github.workspace }}/PluginMediaMonkey/x32/${{ env.build_configuration }}/*" -Destination "${{ github.workspace }}/deploy/x32" -Force

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: ${{ github.workspace }}/PluginMediaMonkey/bin/
        
    - name: Move Release Artifacts
      shell: pwsh
      run: |
        New-Item -Path "${{ github.workspace }}/publish/x64" -Type Directory
        Move-Item -Path "${{ github.workspace }}/PluginMediaMonkey/bin/${{ env.build_configuration }}/x64/MediaMonkey.dll" -Destination "${{ github.workspace }}/publish/x64" -Force
        
        New-Item -Path "${{ github.workspace }}/publish/x86" -Type Directory
        Move-Item -Path "${{ github.workspace }}/PluginMediaMonkey/bin/${{ env.build_configuration }}/x86/MediaMonkey.dll" -Destination "${{ github.workspace }}/publish/x86" -Force

    - name: Zip Release Artifacts
      run: Compress-Archive -Path "${{ github.workspace }}/publish/*" -DestinationPath "${{ github.workspace }}/publish/rainmeter-mediamonkey_${{ env.version }}.zip"
    
    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release
        path: ${{ github.workspace }}/publish/rainmeter-mediamonkey_${{ env.version }}.zip

  release:
    runs-on: windows-latest
    if: ${{ github.event_name != 'pull_request'  && github.ref_name == 'main' }}
    needs: build

    steps:
    - name: Get plugin - x64
      uses: actions/download-artifact@v3
      with:
        name: release
        path: ${{ github.workspace }}/publish/
        
    - name: Create release
      uses: actions/github-script@v6
      id: create-release
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const {data: newRelease} = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'Rainmeter MediaMonkey Plugin ${{ env.version }}',
            tag_name: 'v${{ env.version }}',
            generate_release_notes: true,
            draft: true,
            prerelease: false
          });
          console.log(`Release has been created with id ${newRelease.id}: ${newRelease.html_url}`)
          core.setOutput("url", newRelease.html_url)
          core.setOutput("id", newRelease.id)
        
    - name: Upload Release Assets
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs').promises
          const attachment = await fs.readFile("./publish/rainmeter-mediamonkey_${{ env.version }}.zip")
          await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: '${{ steps.create-release.outputs.id }}',
            data: attachment,
            name: 'rainmeter-mediamonkey_${{ env.version }}.zip'
          });
